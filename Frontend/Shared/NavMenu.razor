@using Blazored.Modal
@using Blazored.Modal.Services
@using Pages
@using Frontend.Auth
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@inject IModalService modal

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Frontend</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">


    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <AuthorizeView Roles="Admin">
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="manageproducts">
                        <span class="oi oi-spreadsheet" aria-hidden="true"></span> Manage Products
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="managecoupons">
                        <span class="oi oi-aperture" aria-hidden="true"></span> Manage Coupons
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="signup">
                        <span class="oi oi-person" aria-hidden="true"></span> Add User
                    </NavLink>
                </li>
            </Authorized>
        </AuthorizeView>

        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="@(() => modal.Show<ProductBasket>("Product basket"))" style="cursor: pointer;">
                <span class="oi oi-cart" data-inline="false"></span> View basket
            </NavLink>
        </li>

        <li class="top-row px-4 nav-item">
            <AuthorizeView>
                <Authorized>
                    <p class="mt-3 font-weight-bold text-white">@context.User.Identity.Name</p>
                </Authorized>
                <NotAuthorized>
                    <p class="mt-3 font-weight-bold text-white">Signed out...!</p>
                </NotAuthorized>
            </AuthorizeView>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <p class="mt-3 font-weight-bold text-white">(Admin)</p>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Roles="Customer">
                <Authorized>
                    <p class="mt-3 font-weight-bold text-white">(Customer)</p>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView>
                <Authorized>
                    <a class="ml-2" href="/" @onclick="(() => Logout())">Logout</a>
                </Authorized>
                <NotAuthorized>
                    <a class="ml-2" href="/login">Login</a>
                </NotAuthorized>
            </AuthorizeView>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public async Task Logout()
    {
        await ((AuthStateProvider)AuthenticationStateProvider).MarkUserAsLoggedOut();
        NavigationManager.NavigateTo("/");
    }

}
