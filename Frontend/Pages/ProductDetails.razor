@page "/productdetails/{id}"
@page  "/productdetails/"
@inherits ProductDetailsBase
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IJSRuntime JSRuntime
@using MatBlazor
@inject IMatToaster Toaster

@if (product.Id == 0)
{
    <div class="mt-5 text-center w-100">
        <img src="./Images/loading.gif" style="width:20%;height:8%" />
    </div>
}
else
{
    <div class="row justify-content-center mt-5">
        <div class="col-sm-12">
            <div>
                <h4 class="mt-2 mb-3">Product Details</h4>
            </div>
            <div class="card product-details-card">
                <div class="card-header">
                    <h4 style="vertical-align:middle">@product.Name</h4>
                </div>
                <div class="card-body row">
                    <div class="col-sm-5 mb-1">
                        @if (Images.Count != 0)
                        {
                            var defaulImage = Images.Where(a => a.IsDefault == true).FirstOrDefault();
                            <div id="carouselExampleControls" class="carousel slide border mb-1" data-ride="carousel">
                                <div class="carousel-inner">
                                    <div class="carousel-item active">
                                        <img class="d-block p-3 w-100" src="@defaulImage.ImageURL" alt="Active Slide" style="height:350px">
                                    </div>
                                    @foreach (var image in Images)
                                    {
                                        if (image.ImageURL != defaulImage.ImageURL)
                                        {
                                            <div class="carousel-item">
                                                <img class="d-block p-3 w-100" src="@image.ImageURL" alt="Slide: @image.Id" style="height:350px">
                                            </div>
                                        }
                                    }
                                </div>
                                <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next " href="#carouselExampleControls" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        }
                        else
                        {
                            <div class="border mb-1">
                                <img class="d-block p-3 w-100 justify-content-center" src="/Images/noimage2.png" />
                            </div>
                        }
                    </div>
                    <div class="col-sm-7 mb-1">

                        <div>
                            <h5>Description: </h5>
                            <p class="text-left">@product.Description</p>
                            <br />
                        </div>
                        <div><strong>Category: </strong>@product.ProductCategoryName<br /><br /></div>
                        @if (product.SalePrice > 0)
                        {
                            <p class="text-danger" style="font-size:18px;margin-bottom:3px">Sale Price: @product.CurrentPrice kr</p>
                            <p style="font-size:13px" class="text-muted mt-0 pt-0 mb-0 pb-0 text-"><del>Original price: @product.Price kr</del></p>
                        }
                        else
                        {
                            <p class="text-secondary" style="margin-bottom:22px; font-size:18px">Price: @product.CurrentPrice kr</p>
                        }
                    </div>
                </div>
                <div class="card-footer text-center">
                    <a href="/" class="btn btn-secondary btn-sm">Return</a>
                    <button @onclick="() => AddProductToBasket(product)" class="btn btn-sm btn-success">Add to basket</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    public async Task AddProductToBasket(Product product)
    {
        bool basketExists = await localStorage.ContainKeyAsync("customer-basket");
        var basket = basketExists ? await localStorage.GetItemAsync<List<ProductInBasket>>("customer-basket") : new List<ProductInBasket>();

        ProductInBasket productInBasket = basket.FirstOrDefault(x => x.Product.Id == product.Id);

        if (productInBasket == null)
        {
            ProductInBasket newProductInBasket = new ProductInBasket
            {
                Product = product,
                Amount = 1
            };
            basket.Add(newProductInBasket);
        }
        else
        {
            if (productInBasket.Amount >= product.Stock)
            {
                Toaster.Add($"You can't order more than {product.Stock} of this product.", MatToastType.Danger, "Failed to add product");
                return;
            }
            else
            {
                productInBasket.Amount++;
            }
        }

        Toaster.Add($"You have added \"{product.Name}\" to your basket.", MatToastType.Success, "Added product");
        await localStorage.SetItemAsync("customer-basket", basket);
    }
}